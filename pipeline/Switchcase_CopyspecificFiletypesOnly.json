{
	"name": "Switchcase_CopyspecificFiletypesOnly",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata for files",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "SRC_Paramtr1_CSV",
						"type": "DatasetReference",
						"parameters": {
							"ds_filesys_RJ": {
								"value": "@pipeline().parameters.FileSystem_RJ",
								"type": "Expression"
							},
							"ds_Direc_RJ": {
								"value": "@pipeline().parameters.Directory_RJ",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems",
						"itemName",
						"itemType"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Filter with Contains function",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata for files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata for files').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().type,'file')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach_CopyFilteredXMLCSVTXTFiles",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter with Contains function",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata for files').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Switch_CopyXMLCSVTXTfiles",
							"type": "Switch",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@split(item().name,'.')[1]",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "csv",
										"activities": [
											{
												"name": "Copy data CSV",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SW_SRC_DS",
														"type": "DatasetReference",
														"parameters": {
															"ds_FS": {
																"value": "@pipeline().parameters.FileSystem_RJ",
																"type": "Expression"
															},
															"ds_Direct": {
																"value": "@pipeline().parameters.Directory_RJ",
																"type": "Expression"
															},
															"ds_Filename": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "SW_Sink_DS",
														"type": "DatasetReference",
														"parameters": {
															"ds_FS_Sink": {
																"value": "@pipeline().parameters.FileSystem_RJ",
																"type": "Expression"
															},
															"ds_DIR_Sink": {
																"value": "@concat(pipeline().parameters.Directory_RJ,'/SC_CSV_Files')\n\n",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									},
									{
										"value": "xml",
										"activities": [
											{
												"name": "Copy data XML",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SW_SRC_DS",
														"type": "DatasetReference",
														"parameters": {
															"ds_FS": {
																"value": "@pipeline().parameters.FileSystem_RJ",
																"type": "Expression"
															},
															"ds_Direct": {
																"value": "@pipeline().parameters.Directory_RJ",
																"type": "Expression"
															},
															"ds_Filename": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "SW_Sink_DS",
														"type": "DatasetReference",
														"parameters": {
															"ds_FS_Sink": {
																"value": "@pipeline().parameters.FileSystem_RJ",
																"type": "Expression"
															},
															"ds_DIR_Sink": {
																"value": "@concat(pipeline().parameters.Directory_RJ,'/SC_XML_Files')\n\n",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									},
									{
										"value": "txt",
										"activities": [
											{
												"name": "Copy data txt",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SW_SRC_DS",
														"type": "DatasetReference",
														"parameters": {
															"ds_FS": {
																"value": "@pipeline().parameters.FileSystem_RJ",
																"type": "Expression"
															},
															"ds_Direct": {
																"value": "@pipeline().parameters.Directory_RJ",
																"type": "Expression"
															},
															"ds_Filename": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "SW_Sink_DS",
														"type": "DatasetReference",
														"parameters": {
															"ds_FS_Sink": {
																"value": "@pipeline().parameters.FileSystem_RJ",
																"type": "Expression"
															},
															"ds_DIR_Sink": {
																"value": "@concat(pipeline().parameters.Directory_RJ,'/SC_TXT_Files')\n\n",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								],
								"defaultActivities": [
									{
										"name": "Copy data_MISC_Files",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "SW_SRC_DS",
												"type": "DatasetReference",
												"parameters": {
													"ds_FS": {
														"value": "@pipeline().parameters.FileSystem_RJ",
														"type": "Expression"
													},
													"ds_Direct": {
														"value": "@pipeline().parameters.Directory_RJ",
														"type": "Expression"
													},
													"ds_Filename": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "SW_Sink_DS",
												"type": "DatasetReference",
												"parameters": {
													"ds_FS_Sink": {
														"value": "@pipeline().parameters.FileSystem_RJ",
														"type": "Expression"
													},
													"ds_DIR_Sink": {
														"value": "@concat(pipeline().parameters.Directory_RJ,'/SC_MISC_Files')\n",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"FileSystem_RJ": {
				"type": "string",
				"defaultValue": "project"
			},
			"Directory_RJ": {
				"type": "string",
				"defaultValue": "Output"
			}
		},
		"folder": {
			"name": "Rajan_Practice"
		},
		"annotations": []
	}
}