{
	"name": "TxttoTable",
	"properties": {
		"activities": [
			{
				"name": "TxtTOTable",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SRC_Paramtr_CSV",
						"type": "DatasetReference",
						"parameters": {
							"ds_fs_RJ": {
								"value": "@pipeline().parameters.para_fs",
								"type": "Expression"
							},
							"ds_dir_RJ": {
								"value": "@pipeline().parameters.para_Dir",
								"type": "Expression"
							},
							"ds_filenm_RJ": {
								"value": "@pipeline().parameters.para_flnme",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "FilterColor",
				"type": "Filter",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@color == 'mary'",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "SRC_Paramtr1_CSV",
						"type": "DatasetReference",
						"parameters": {
							"ds_filesys_RJ": {
								"value": "@pipeline().parameters.para_fs",
								"type": "Expression"
							},
							"ds_Direc_RJ": {
								"value": "@pipeline().parameters.para_Dir",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"itemType",
						"itemName",
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CopyRecords",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SRC_Paramtr_CSV",
									"type": "DatasetReference",
									"parameters": {
										"ds_fs_RJ": {
											"value": "@pipeline().parameters.para_fs",
											"type": "Expression"
										},
										"ds_dir_RJ": {
											"value": "@pipeline().parameters.para_Dir",
											"type": "Expression"
										},
										"ds_filenm_RJ": {
											"value": "@pipeline().parameters.para_flnme",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSqlTable2",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "Lookup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "SRC_Paramtr_CSV",
						"type": "DatasetReference",
						"parameters": {
							"ds_fs_RJ": {
								"value": "@pipeline().parameters.para_fs",
								"type": "Expression"
							},
							"ds_dir_RJ": {
								"value": "@pipeline().parameters.para_Dir",
								"type": "Expression"
							},
							"ds_filenm_RJ": {
								"value": "@pipeline().parameters.para_flnme",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"para_fs": {
				"type": "string",
				"defaultValue": "project"
			},
			"para_Dir": {
				"type": "string",
				"defaultValue": "Output"
			},
			"para_flnme": {
				"type": "string",
				"defaultValue": "TestRajan.txt"
			}
		},
		"folder": {
			"name": "Rajan_Practice"
		},
		"annotations": []
	}
}