{
	"name": "copy_pipeline_parameter2",
	"properties": {
		"activities": [
			{
				"name": "copy_data",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "source_parameter_csv",
						"type": "DatasetReference",
						"parameters": {
							"ds_filesystem": {
								"value": "@pipeline().parameters.File_system",
								"type": "Expression"
							},
							"ds_directory": {
								"value": "@pipeline().parameters.Input_directory",
								"type": "Expression"
							},
							"ds_filename": {
								"value": "@pipeline().parameters.Filename",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "source_parameter_csv",
						"type": "DatasetReference",
						"parameters": {
							"ds_filesystem": {
								"value": "@pipeline().parameters.File_system",
								"type": "Expression"
							},
							"ds_directory": {
								"value": "@pipeline().parameters.Output_directory",
								"type": "Expression"
							},
							"ds_filename": {
								"value": "@pipeline().parameters.Filename",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "source_parameter_csv",
						"type": "DatasetReference",
						"parameters": {
							"ds_filesystem": {
								"value": "@pipeline().parameters.File_system",
								"type": "Expression"
							},
							"ds_directory": {
								"value": "@pipeline().parameters.Input_directory",
								"type": "Expression"
							},
							"ds_filename": " "
						}
					},
					"fieldList": [
						"childItems",
						"itemName",
						"itemType"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "copy_data_copy1",
							"type": "Copy",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "source_parameter_csv",
									"type": "DatasetReference",
									"parameters": {
										"ds_filesystem": {
											"value": "@pipeline().parameters.File_system",
											"type": "Expression"
										},
										"ds_directory": {
											"value": "@pipeline().parameters.Input_directory",
											"type": "Expression"
										},
										"ds_filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "source_parameter_csv",
									"type": "DatasetReference",
									"parameters": {
										"ds_filesystem": {
											"value": "@pipeline().parameters.File_system",
											"type": "Expression"
										},
										"ds_directory": {
											"value": "@pipeline().parameters.Output_directory",
											"type": "Expression"
										},
										"ds_filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().name,'SalesLTProduct.txt')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "True_wait",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().name,'SalesLTProduct.txt')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"File_system": {
				"type": "string"
			},
			"Input_directory": {
				"type": "string"
			},
			"Output_directory": {
				"type": "string"
			},
			"Filename": {
				"type": "string"
			}
		},
		"folder": {
			"name": "gopi_test"
		},
		"annotations": []
	}
}